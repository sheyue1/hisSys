
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        /usr/local/nginx/logs/nginx.pid;


events {
    worker_connections  65535;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

	server{
	listen 3001  ssl  ;
        server_name  sheyue.work;
	ssl_certificate sheyue.work_bundle.crt;

         ssl_certificate_key sheyue.work.key;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;

#代理到3000端口跑的node服务
	location /{

	proxy_pass http://127.0.0.1:3000;
	
}
	location /html{
#	proxy_redirect off;
#              proxy_set_header Host $host
#              proxy_set_header X-Real-IP $remote_addr;
#              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#	proxy_pass http://127.0.0.1:80;
	root  /usr/local/nginx;
               index  index.html; 	
}

	location /his{
	root /usr/local/nginx;
		index index.html;
	}	

	location /api/{

                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_pass http://124.221.224.183:8082/;
}
    }




   
    server {
        listen 80  ;
        server_name  sheyue.work;

        #charset koi8-r;
	#ssl_certificate 1_sheyue.work_bundle.crt;
	
	 #ssl_certificate_key 2_sheyue.work.key;
	#ssl_session_timeout 5m;
	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2; 
	#ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;  
 	#ssl_prefer_server_ciphers on;

	#
        #access_log  logs/host.access.log  main;
	
   #     location /{
        #   root  /usr/local/nginx/html;
        #    index  index.html;
  #        proxy_pass http://127.0.0.1:1080;
 #      }

#	location /api{
#	    proxy_pass http://127.0.0.1:8888;
#	}

	location  /{
		root /usr/local/nginx/his;
		index index.html;
	}


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
